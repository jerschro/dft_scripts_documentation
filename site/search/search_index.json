{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to dft scripts documentation","text":"<p>This is a documentation website on DFT scripts Written by Jeremy Schroeder.</p> <p>To request access to obtain scripts either email Jeremy (jerschro@ttu.edu or jeremynschroeder@gmail.com) or find them in /home/jerschro/Scripts directory on the HPCC.</p>"},{"location":"#main-pages","title":"Main Pages","text":"<ol> <li>Turbomole</li> <li>VASP</li> <li>HPCC</li> <li>Misc</li> </ol>"},{"location":"glossary/","title":"Glossary","text":"<ul> <li>auto_freeh.sh </li> <li>check_sq </li> <li>check_usage </li> <li>chmod </li> <li>Combine .csv Files </li> <li>CSV_thermo.sh </li> <li>File Permission Notes </li> <li>fix_ssh.sh </li> <li>freeh </li> <li>freq </li> <li>generate_kpoint_test </li> <li>geo_opt </li> <li>HPCC </li> <li>Misc </li> <li>modify_files.sh </li> <li>nocona_pie </li> <li>quanah_pie </li> <li>read_control </li> <li>squeue </li> <li>turbo_dir </li> <li>Turbomole </li> <li>VASP </li> <li>vasp_energy </li> <li>vasp_thermo </li> </ul>"},{"location":"hpcc/chmod/","title":"chmod","text":""},{"location":"hpcc/chmod/#file-permissions-notes","title":"File Permissions Notes","text":"/home/jerschro/Scripts/chmod/README<pre><code>How your files should be set up to read\n\nFirst run commands in home directory:\nsetfacl -R -m g::r-x /home/eraider\nsetfacl -R -m g:ME:r-x /home/eraider\nsetfacl -R -m g:chem:r-x /home/eraider\n\nThen run fix_ssh.sh to fix the .ssh directory\nThen run modify_files.sh to turn all files not executable (.sh) to read only.\n</code></pre>"},{"location":"hpcc/chmod/#fix_sshsh","title":"fix_ssh.sh","text":""},{"location":"hpcc/chmod/#fix_sshsh-path","title":"fix_ssh.sh path","text":"<pre><code>cp /home/jerschro/Scripts/chmod/fix_ssh.sh .\n</code></pre>"},{"location":"hpcc/chmod/#fix_ssh-description","title":"fix_ssh Description","text":"<pre><code>usage: fix_ssh.sh [-h]\n\nFixes file permissions in .ssh folder. Script is meant to be run in home directory.\n\nWritten by Jeremy Schroeder 2-20-2024\n</code></pre>"},{"location":"hpcc/chmod/#modify_filessh","title":"modify_files.sh","text":""},{"location":"hpcc/chmod/#modify_filessh-path","title":"modify_files.sh path","text":"<pre><code>cp /home/jerschro/Scripts/chmod/modify_files.sh .\n</code></pre>"},{"location":"hpcc/chmod/#modify_files-description","title":"modify_files Description","text":"<pre><code>usage: modify_files.sh [-h]\n\nRecursive script that reads all sub directories and fixes file permissions to all text files and executable scripts.\n\nWritten by Jeremy Schroeder 2-20-2024\n</code></pre>"},{"location":"hpcc/index_hpcc/","title":"HPCC Scripts","text":"<ol> <li>squeue - Scripts that show current HPCC status.<ol> <li>check_sq</li> <li>check_usage</li> <li>nocona_pie</li> <li>quanah_pie</li> </ol> </li> <li>chmod - Scripts that change file permissions on HPCC.<ol> <li>File Permission Notes</li> <li>fix_ssh.sh</li> <li>modify_files.sh</li> </ol> </li> </ol>"},{"location":"hpcc/squeue_scripts/","title":"squeue","text":""},{"location":"hpcc/squeue_scripts/#check_sq","title":"check_sq","text":""},{"location":"hpcc/squeue_scripts/#check_sq-hpcc-alias","title":"check_sq HPCC alias","text":"<pre><code>alias check_sq='bash /home/jerschro/Scripts/squeue/read_squeue.sh'\n</code></pre>"},{"location":"hpcc/squeue_scripts/#check_sq-description","title":"check_sq Description","text":"<pre><code>usage: check_sq [-h] USER\n\nPrints percentage of usage for USER jobs on different HPCC Nodes.\n\nWritten by Jeremy Schroeder 3-1-2024\n</code></pre>"},{"location":"hpcc/squeue_scripts/#check_sq-example-output","title":"check_sq Example Output","text":"check_sq Example Output quanah:$ check_sq jerschro<pre><code>jerschro is currently using 387.3333333333333 quanah nodes, which is 82.9408% of quanah partition.\njerschro is currently using 134.0 nocona nodes, which is 55.8333% of nocona partition.\n</code></pre>"},{"location":"hpcc/squeue_scripts/#check_usage","title":"check_usage","text":""},{"location":"hpcc/squeue_scripts/#check_usage-hpcc-alias","title":"check_usage HPCC alias","text":"<pre><code>alias check_usage='bash /home/jerschro/Scripts/squeue/pandas_squeue.sh'\n</code></pre>"},{"location":"hpcc/squeue_scripts/#check_usage-description","title":"check_usage Description","text":"<pre><code>usage: check_usage [-h]\n\nPrints Top 20 current longest running jobs and percentage of usage for quanah and nocona partitions.\n\nWritten by Jeremy Schroeder 3-1-2024\n</code></pre>"},{"location":"hpcc/squeue_scripts/#check_usage-example-output","title":"check_usage Example Output","text":"check_usage Example Output quanah:$ check_usage<pre><code>-----------------------------------TOP 20 LONGEST JOBS CURRENTLY------------------------------------\n         PARTITION      USER                                               NAME        TIME  NODES  CPUS       QOS  SECONDS\nJOBID\n12959869    nocona   aaquino                                       first-dimmer  8-05:06:09      1   128    aquino   709569\n12973705    nocona  solusegu     /home/solusegu/urea/kinetics/Ag110/CO+NO/MLneb  1-19:57:04      1    32  gauthier   158224\n12973707    nocona  solusegu   /home/solusegu/urea/kinetics/Ag110/COOH+NO/MLneb  1-19:55:23      1    32  gauthier   158123\n12970899    nocona  rosutton                                               namd  1-18:39:40      5   640    normal   153580\n12971796    quanah  aschueth                                                MAX  1-18:18:04      1     1    normal   152284\n12970119    nocona  salwahai                                           RotProbe  1-17:12:23      8  1024    normal   148343\n12970139    nocona  salwahai                                           RotProbe  1-16:57:33      1   128    normal   147453\n12970120    nocona  salwahai                                           RotProbe  1-15:35:28      8  1024    normal   142528\n12972064    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:16:59      1    64    normal   141419\n12972063    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:16:59      1    64    normal   141419\n12972068    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:11:57      1    64    normal   141117\n12972065    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:11:57      1    64    normal   141117\n12972066    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:11:57      1    64    normal   141117\n12972067    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:11:57      1    64    normal   141117\n12972070    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:06:56      1    64    normal   140816\n12972069    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:06:56      1    64    normal   140816\n12972072    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:01:54      1    64    normal   140514\n12972071    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-15:01:54      1    64    normal   140514\n12972073    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-14:56:53      1    64    normal   140213\n12972074    nocona  josegaut  /home/josegaut/amorphous_irox/training_data_me...  1-14:51:51      1    64    normal   139911\n\n\n\n-----nocona current allocation-----\nUSER           CPUS    NODES      %\n-----------  ------  -------  -----\nsalwahai      17152   134.00  55.83\njosegaut       4480    35.00  14.58\nunallocated    3470    27.11  11.30\nchtong          840     6.56   2.73\nrosutton        640     5.00   2.08\nxinyawu         640     5.00   2.08\nzhutang         640     5.00   2.08\njipkang         512     4.00   1.67\nmhajianz        320     2.50   1.04\nmpourasg        256     2.00   0.83\ntericson        256     2.00   0.83\ntristfis        256     2.00   0.83\nlbraga          224     1.75   0.73\n\n\n\n-----quanah current allocation-----\nUSER           CPUS    NODES      %\n-----------  ------  -------  -----\nfazhussa      13944   387.33  82.94\nunallocated    1277    35.47   7.60\nsolusegu        608    16.89   3.62\nksonibar        360    10.00   2.14\nypokhrel        300     8.33   1.78\nmmarasch         90     2.50   0.54\njosegaut         72     2.00   0.43\nguiyli           40     1.11   0.24\n</code></pre>"},{"location":"hpcc/squeue_scripts/#nocona_pie","title":"nocona_pie","text":"<p>nocona_pie uses X11 Forwarding</p>"},{"location":"hpcc/squeue_scripts/#nocona_pie-hpcc-alias","title":"nocona_pie HPCC alias","text":"<pre><code>alias nocona_pie='bash /home/jerschro/Scripts/squeue/nocona_pie.sh'\n</code></pre>"},{"location":"hpcc/squeue_scripts/#nocona_pie-description","title":"nocona_pie Description","text":"<pre><code>usage: nocona_pie [-h]\n\nGenerates pie chart of current allocation for nocona partition.\n\nWritten by Jeremy Schroeder 3-1-2024\n</code></pre>"},{"location":"hpcc/squeue_scripts/#nocona_pie-example-output","title":"nocona_pie Example Output","text":""},{"location":"hpcc/squeue_scripts/#quanah_pie","title":"quanah_pie","text":"<p>quanah_pie uses X11 Forwarding</p>"},{"location":"hpcc/squeue_scripts/#quanah_pie-hpcc-alias","title":"quanah_pie HPCC alias","text":"<pre><code>alias quanah_pie='bash /home/jerschro/Scripts/squeue/quanah_pie.sh'\n</code></pre>"},{"location":"hpcc/squeue_scripts/#quanah_pie-description","title":"quanah_pie Description","text":"<pre><code>usage: quanah_pie [-h]\n\nGenerates pie chart of current allocation for quanah partition.\n\nWritten by Jeremy Schroeder 3-1-2024\n</code></pre>"},{"location":"hpcc/squeue_scripts/#quanah_pie-example-output","title":"quanah_pie Example Output","text":""},{"location":"misc/combine_csv_files/","title":"combine csv files","text":""},{"location":"misc/combine_csv_files/#combine_csv_filespy-path","title":"combine_csv_files.py path","text":"<pre><code>cp /home/jerschro/Scripts/misc/combine_csv_files.py .\n</code></pre>"},{"location":"misc/combine_csv_files/#combine_csv_filespy-description","title":"combine_csv_files.py Description","text":"<pre><code>usage: combine_csv_files.py [-h] [combined_excel_filename (optional arg)]\n\nLocates all .csv files in submit directory and combines those files into one .xlsx Excel workbook.\n\nWritten by Jeremy Schroeder 2-14-2024\n</code></pre>"},{"location":"misc/index_misc/","title":"Miscellaneous Scripts","text":"<ol> <li>Combine .csv Files - Locates all .csv files in submit directory and combines those files into one .xlsx Excel workbook.</li> </ol>"},{"location":"turbomole/freeh/","title":"freeh","text":""},{"location":"turbomole/freeh/#auto_freehsh","title":"auto_freeh.sh","text":""},{"location":"turbomole/freeh/#auto_freehsh-path","title":"auto_freeh.sh path","text":"<pre><code>cp /home/jerschro/Scripts/turbomole/freeh/auto_freeh.sh .\n</code></pre>"},{"location":"turbomole/freeh/#auto_freehsh-description","title":"auto_freeh.sh Description","text":"<pre><code>usage: auto_freeh.sh [-h]\n\nShell for automating CSV_freeh.sh in multiple turbomole frequency directories.\n\nWritten by Jeremy Schroeder 4-13-2024\n</code></pre>"},{"location":"turbomole/freeh/#csv_thermosh","title":"CSV_thermo.sh","text":""},{"location":"turbomole/freeh/#csv_freehsh-path","title":"CSV_freeh.sh path","text":"<pre><code>cp /home/jerschro/Scripts/turbomole/freeh/CSV_freeh.sh .\n</code></pre>"},{"location":"turbomole/freeh/#csv_freehsh-description","title":"CSV_freeh.sh Description","text":"<pre><code>usage: CSV_freeh.sh [-h] CSV_FILENAME TSTART TEND NUMT [INDEX_INT_LIST (optional)]\n\nScript that submits a geometry optimization calculation when arguments are supplied.\n\npositional arguments:\n  CSV_FILENAME          Output .csv filename\n  TSTART                Integer of starting temperature value.\n  TEND                  Integer of ending temperature value.\n  NUMT                  Integer of amount of freeh values printed.\n  INDEX_INT_LIST        (optional) Default printout is all freeh values. Read description below to filter freeh .csv results.\n\ndescription of INDEX_INT_LIST:\n  INDEX_INT_LIST if provided, .csv file output will be filtered.\n  For example, if INDEX_INT_LIST = 0,17,6,13\n    The csv file output will be filtered to only contain these output values:\n      'T (K)' 'Total Energy freq (kJ/mol)' 'chem.pot. (kJ/mol)' 'enthalpy (kJ/mol)'\n    Instead of containing all of the freeh results.\n  freeh output value indexes:\n     0='T (K)'\n     1='P (MPa)'\n     2='ln (qtrans)'\n     3='ln (qrot)'\n     4='ln(qvib)'\n     5='chem.pot. (kJ/mol)'\n     6='energy (kJ/mol)'\n     7='entropy (kJ/mol/K)'\n     8=''\n     9='T (K)'\n    10='P (MPa)'\n    11='Cv (kJ/mol-K)'\n    12='Cp (kJ/mol-K)'\n    13='enthalpy (kJ/mol)'\n    14=''\n    15='T (K)'\n    16='Total Energy freq (au)'\n    17='Total Energy freq (kJ/mol)'\n    18=''\n\noptions:\n  -h, --help            show this help message and exit.\n\nWritten by Jeremy Schroeder 4-13-2024\n</code></pre>"},{"location":"turbomole/freeh/#csv_freehsh-example-output","title":"CSV_freeh.sh Example Output","text":"CSV_thermo.csv Example Usage<pre><code>bash CSV_thermo.csv example_output.csv 250 500 6\n</code></pre> example_output.csv File example_output.csv<pre><code>T (K),P (MPa),ln (qtrans),ln (qrot),ln(qvib),chem.pot. (kJ/mol),energy (kJ/mol),entropy (kJ/mol/K),,T (K),P (MPa),Cv (kJ/mol-K),Cp (kJ/mol-K),enthalpy (kJ/mol),,T (K),Total Energy freq (au),Total Energy freq (kJ/mol),\n250.00,0.1000000,17.31,12.03,1.70,92.18,169.12,0.31610,,250.00,0.1000000,0.0827033,0.0910176,171.20,,250.00,-817.52609110919,-2146414.7522071786,\n300.00,0.1000000,17.77,12.31,2.31,75.93,173.53,0.33366,,300.00,0.1000000,0.0934691,0.1017834,176.03,,300.00,-817.52609110919,-2146414.7522071786,\n350.00,0.1000000,18.15,12.54,2.95,58.83,178.45,0.35008,,350.00,0.1000000,0.1030149,0.1113292,181.36,,350.00,-817.52609110919,-2146414.7522071786,\n400.00,0.1000000,18.49,12.74,3.59,40.94,183.82,0.36552,,400.00,0.1000000,0.1115332,0.1198475,187.14,,400.00,-817.52609110919,-2146414.7522071786,\n450.00,0.1000000,18.78,12.92,4.23,22.29,189.59,0.38008,,450.00,0.1000000,0.1191343,0.1274486,193.33,,450.00,-817.52609110919,-2146414.7522071786,\n500.00,0.1000000,19.05,13.07,4.87,2.94,195.72,0.39387,,500.00,0.1000000,0.1259088,0.1342231,199.87,,500.00,-817.52609110919,-2146414.7522071786,\n</code></pre> <p>example_output.csv Table</p> T (K) P (MPa) ln (qtrans) ln (qrot) ln(qvib) chem.pot. (kJ/mol) energy (kJ/mol) entropy (kJ/mol/K) T (K) P (MPa) Cv (kJ/mol-K) Cp (kJ/mol-K) enthalpy (kJ/mol) T (K) Total Energy freq (au) Total Energy freq (kJ/mol) 250.00 0.1000000 17.31 12.03 1.70 92.18 169.12 0.31610 250.00 0.1000000 0.0827033 0.0910176 171.20 250.00 -817.52609110919 -2146414.7522071786 300.00 0.1000000 17.77 12.31 2.31 75.93 173.53 0.33366 300.00 0.1000000 0.0934691 0.1017834 176.03 300.00 -817.52609110919 -2146414.7522071786 350.00 0.1000000 18.15 12.54 2.95 58.83 178.45 0.35008 350.00 0.1000000 0.1030149 0.1113292 181.36 350.00 -817.52609110919 -2146414.7522071786 400.00 0.1000000 18.49 12.74 3.59 40.94 183.82 0.36552 400.00 0.1000000 0.1115332 0.1198475 187.14 400.00 -817.52609110919 -2146414.7522071786 450.00 0.1000000 18.78 12.92 4.23 22.29 189.59 0.38008 450.00 0.1000000 0.1191343 0.1274486 193.33 450.00 -817.52609110919 -2146414.7522071786 500.00 0.1000000 19.05 13.07 4.87 2.94 195.72 0.39387 500.00 0.1000000 0.1259088 0.1342231 199.87 500.00 -817.52609110919 -2146414.7522071786"},{"location":"turbomole/freq/","title":"freq","text":""},{"location":"turbomole/freq/#freq-alias","title":"freq Alias","text":"<pre><code>alias freq='bash /home/jerschro/Scripts/turbomole/freq.sh'\n</code></pre>"},{"location":"turbomole/freq/#freq-description","title":"freq Description","text":"<pre><code>usage: freq.sh [-h] [--vib_freq_method {n,N,NumForce,a,aoforce}] [-s SCF_CONV] [-n] [--partition {quanah,nocona}]\n               [--nodes NODES] [--cpus CPUS] [--time TIME] [--mem_per_cpu MEM_PER_CPU]\n               GEO_OPT_DIR JOB_NAME\n\nScript that submits a frequency calculation when arguments are supplied.\n\npositional arguments:\n  GEO_OPT_DIR           Filepath to initial .xyz structure file or coord file.\n  JOB_NAME              Name you want the job to be in the slurm file.\n\noptions:\n  -h, --help            show this help message and exit\n  --vib_freq_method {n,N,NumForce,a,aoforce}\n                        What Frequency function you want.\n  -s SCF_CONV, --scf_conv SCF_CONV\n                        SCF Convergence criteria. Standard is 6 for optimization, 8 for frequency. Default is 8.\n  -n, --no_sbatch       Stop auto submission of geo_opt job.\n  --partition {quanah,nocona}\n                        Partition of where the job should be submitted. Default is quanah.\n  --nodes NODES         Nodes on partition. Default is 1.\n  --cpus CPUS           Total CPUS. Default is 36.\n  --time TIME           Total time limit for job. Default is 48:00:00\n  --mem_per_cpu MEM_PER_CPU\n                        Total time limit for job. Default is 5200MB\n\nWritten by Jeremy Schroeder 4-18-2024.\n    Implements expect scripts and ideals from Tristan Fisher.\n    Uses bash library: https://github.com/nhoffman/argparse-bash\n</code></pre>"},{"location":"turbomole/geo_opt/","title":"geo_opt","text":""},{"location":"turbomole/geo_opt/#alias-for-hpcc","title":"Alias for HPCC","text":"<pre><code>alias geo_opt='bash /home/jerschro/Scripts/turbomole/geo_opt.sh'\n</code></pre>"},{"location":"turbomole/geo_opt/#description-of-geo_opt","title":"Description of geo_opt","text":"<pre><code>usage: geo_opt.sh [-h] [-c CHARGE] [-s SCF_CONV] [-f FROZEN_ATOMS [FROZEN_ATOMS ...]] [-n] [--partition {quanah,nocona}]\n                  [--nodes NODES] [--cpus CPUS] [--time TIME] [--mem_per_cpu MEM_PER_CPU]\n                  STRUCTURE_FILEPATH JOB_NAME BASIS_SET DFT_FUNCTIONAL\n\nScript that submits a TURBOMOLE geometry optimization calculation when arguments are supplied.\n\npositional arguments:\n  STRUCTURE_FILEPATH    Filepath to initial .xyz structure file or coord file.\n  JOB_NAME              Name you want the job to be in the slurm file.\n  BASIS_SET             Basis Set for calculation. Remember for example if you want SV(P), you need to type it as SV\\(P\\).\n  DFT_FUNCTIONAL        Functional for calculation.\n\noptions:\n  -h, --help            show this help message and exit\n  -c CHARGE, --charge CHARGE\n                        Initial charge for calculation. Default is 0.\n  -s SCF_CONV, --scf_conv SCF_CONV\n                        SCF Convergence criteria. Standard is 6 for optimization, 8 for frequency. Default is 6.\n  -f FROZEN_ATOMS [FROZEN_ATOMS ...], --frozen_atoms FROZEN_ATOMS [FROZEN_ATOMS ...]\n                        Type list of species you want to freeze. Default list is ['al','ti'].\n  -n, --no_sbatch       Stop auto submission of geo_opt job.\n  --partition {quanah,nocona}\n                        Partition of where the job should be submitted. Default is quanah.\n  --nodes NODES         Nodes on partition. Default is 1.\n  --cpus CPUS           Total CPUS. Default is 36.\n  --time TIME           Total time limit for job. Default is 48:00:00\n  --mem_per_cpu MEM_PER_CPU\n                        Total time limit for job. Default is 5200MB\n\nWritten by Jeremy Schroeder 4-18-2024.\n    Implements expect scripts and ideals from Tristan Fisher.\n    Uses bash library: https://github.com/nhoffman/argparse-bash\n</code></pre>"},{"location":"turbomole/index_turbomole/","title":"Turbomole Scripts","text":"<ol> <li>turbo_dir - Finds Turbomole jobs in subdirectories and returns current information from them.</li> <li>freeh - Scripts for converting freeh output into .csv file.<ol> <li>auto_freeh.sh</li> <li>CSV_thermo.sh</li> </ol> </li> <li>read_control - Returns control file information in Turbomole job directories in printed tabular.</li> <li>geo_opt - Script that submits a geometry optimization calculation when arguments are supplied.</li> <li>freq - Script that submits a frequency calculation when arguments are supplied.</li> </ol>"},{"location":"turbomole/read_control/","title":"read_control","text":""},{"location":"turbomole/read_control/#alias-for-hpcc","title":"Alias for HPCC","text":"<pre><code>alias read_control='/home/jerschro/conda/bin/python3 /home/jerschro/Scripts/turbomole/read_control_file.py'\n</code></pre>"},{"location":"turbomole/read_control/#description-of-read_control","title":"Description of read_control","text":"<pre><code>usage: read_control [-h]\n\nReturns control file information in Turbomole job directories in printed tabular.\n\nWritten by Jeremy Schroeder 2-27-2024\n</code></pre>"},{"location":"turbomole/turbo_dir/","title":"turbo_dir","text":""},{"location":"turbomole/turbo_dir/#alias-for-hpcc","title":"Alias for HPCC","text":"<pre><code>alias turbo_dir='/home/jerschro/conda/bin/python3 /home/jerschro/Scripts/turbomole/read_turbo_directories.py'\n</code></pre>"},{"location":"turbomole/turbo_dir/#description-of-turbo_dir","title":"Description of turbo_dir","text":"<pre><code>usage: turbo_dir [-h] [-c] [-f FILTER_JOB_TYPE] [-d] [-r] [-n] [-e] [-t] [-q] [-p]\n\nFinds Turbomole jobs in subdirectories and returns current information from them.\n\noptions:\n  -h, --help            show this help message and exit\n  -c, --control-info    Print detailed control file information. \n                        Job Information returned is [basis_set, func, conv, ri, marij, disp3] \n                        If you want control info printed out cleaner, use read_control script.\n  -f FILTER_JOB_TYPE, --filter-job-type FILTER_JOB_TYPE\n                        Filter job types. Supply string or list seperated by commas. \n                        'Turbomole job type' = [FILTER_JOB_TYPE keywords] \n                            'geo opt' = ['o','g','opt','geo opt','optimization'] \n                            'cosmos' = ['s','c','solvent','cosmo','cosmos','cosmoprep'] \n                            'freq' = ['f','freq','frequency'] \n                        Example Usage: 'turbo_dir --filter-job-type opt,freq\n  -d, --done-jobs       Print only finished jobs.\n  -r, --running-jobs    Print only currently running jobs.\n  -n, --not-converged-jobs\n                        Print only not converged jobs.\n  -e, --export-to-csv   Print out return table in csv format.\n                        Can use bash syntax to write to csv file. \n                        'turbo_dir --export-to-csv &gt; readout.csv'\n  -t, --export-to-tsv   Print out return table in tsv format. \n                        Can use bash syntax to write to tsv file. \n                        'turbo_dir --export-to-tsv &gt; readout.tsv'\n  -q, --show-frequencies\n                        Turn on to show frequencies in vibspectrum file.\n  -p, --print-debug     Turn on to print debug statements. Only for testing.\n\nWritten by Jeremy Schroeder 4-12-2024\n</code></pre>"},{"location":"vasp/generate_kpoint/","title":"generate_kpoint_test","text":""},{"location":"vasp/generate_kpoint/#generate_kpoint_testsh-path","title":"generate_kpoint_test.sh path","text":"<pre><code>cp /home/jerschro/Scripts/vasp/generate_kpoint_test.sh .\n</code></pre>"},{"location":"vasp/generate_kpoint/#generate_kpoint_testsh-description","title":"generate_kpoint_test.sh Description","text":"<pre><code>usage: generate_kpoint_test.sh [-h]\n\nScript that generates kpoint test directories for vasp and submits jobs (if uncommented).\n\ngenerate_kpoint_test.sh reads orig/ directory in submit directory. Below are files needed in orig/\n  -POSCAR\n  -INCAR\n  -$slurm_file\n  -POTCAR\n\ndefined variables (located in top of file):\n  start                 Initial kpoint integer value.\n  end                   Last kpont integer value.\n  jobname               Jobname added to slurm_file.\n  slurm_file            Name of slurm_file. Should have JOB_NAME where you want the jobname.\n\ncurrent variables defined in top of file:\n  $start = 1\n  $end = 10\n  $jobname = ex_kpoint_test\n  $slurm_file = run_vasp.sh\n\noptions:\n  -h, --help            show this help message and exit.\n\nWritten by Jeremy Schroeder 4-13-2024\n</code></pre>"},{"location":"vasp/generate_kpoint/#generate_kpoint_testsh-example-usage","title":"generate_kpoint_test.sh Example Usage","text":"Example of generate_kpoint_test.sh Terminal Output quanah:/kpoint_test_example$ bash generate_kpoint_test.sh<pre><code> starting kpoint test program\n checking orig folder\n orig folder is good, starting to make kpoint folders\n kpoints 1x1x1 being created\n kpoints 1x1x1 dir done\n kpoints 2x2x2 being created\n kpoints 2x2x2 dir done\n kpoints 3x3x3 being created\n kpoints 3x3x3 dir done\n kpoints 4x4x4 being created\n kpoints 4x4x4 dir done\n kpoints 5x5x5 being created\n kpoints 5x5x5 dir done\n kpoints 6x6x6 being created\n kpoints 6x6x6 dir done\n kpoints 7x7x7 being created\n kpoints 7x7x7 dir done\n kpoints 8x8x8 being created\n kpoints 8x8x8 dir done\n kpoints 9x9x9 being created\n kpoints 9x9x9 dir done\n kpoints 10x10x10 being created\n kpoints 10x10x10 dir done\n finished kpoint job submission yayyy\n</code></pre> Example of generate_kpoint_test.sh File Creation quanah:/kpoint_test_example$ ls *<pre><code>generate_kpoint_test.sh\n\n10x10x10:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n1x1x1:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n2x2x2:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n3x3x3:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n4x4x4:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n5x5x5:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n6x6x6:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n7x7x7:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n8x8x8:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\n9x9x9:\nINCAR  KPOINTS  POSCAR  POTCAR  run_vasp.sh\n\norig:\nINCAR  POSCAR  POTCAR  POTCAR  run_vasp.sh\n</code></pre> Example of generate_kpoint_test.sh KPOINTS Files quanah:/kpoint_test_example$ head */KPOINTS<pre><code>==&gt; 10x10x10/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 10  10  10\n 0. 0. 0.\n\n==&gt; 1x1x1/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 1  1  1\n 0. 0. 0.\n\n==&gt; 2x2x2/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 2  2  2\n 0. 0. 0.\n\n==&gt; 3x3x3/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 3  3  3\n 0. 0. 0.\n\n==&gt; 4x4x4/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 4  4  4\n 0. 0. 0.\n\n==&gt; 5x5x5/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 5  5  5\n 0. 0. 0.\n\n==&gt; 6x6x6/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 6  6  6\n 0. 0. 0.\n\n==&gt; 7x7x7/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 7  7  7\n 0. 0. 0.\n\n==&gt; 8x8x8/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 8  8  8\n 0. 0. 0.\n\n==&gt; 9x9x9/KPOINTS &lt;==\nAutomatic\n 0\nMonkhorst\n 9  9  9\n 0. 0. 0.\n</code></pre>"},{"location":"vasp/index_vasp/","title":"Vasp Scripts","text":"<ol> <li>vasp_energy - This script reads OUTCAR files and prints out tabular information from the OUTCAR files.</li> <li>vasp_thermo - Scripts for thermochemistry results from VASP frequency calculations</li> <li>generate_kpoint_test - Script that generates kpoint test directories for vasp and submits jobs (if uncommented).</li> </ol>"},{"location":"vasp/vasp_energy/","title":"vasp_energy","text":""},{"location":"vasp/vasp_energy/#hpcc-alias","title":"HPCC Alias","text":"<pre><code>alias vasp_energy='/home/jerschro/conda/bin/python3 /home/jerschro/Scripts/vasp/read_outcars_ssh.py'\n</code></pre>"},{"location":"vasp/vasp_energy/#vasp_energy-description","title":"vasp_energy description","text":"<pre><code>usage: vasp_energy [-h] [-f FILENAME] [-e] [-k] [-v] [-t] [-a SORTHIGH] [-d SORTLOW]\n\nfinds values from OUTCAR files\n\noptions:\n  -h, --help            show this help message and exit\n  -f FILENAME, --filename FILENAME\n                        if the outcarfile has a different file name\n  -e, --energy          turn off energy value print out\n  -k, --kpoints         turn on kpoint values print out\n  -v, --volume          turn on volume values print out\n  -t, --time            turn on time values print out\n  -a SORTHIGH, --sorthigh SORTHIGH\n                        sort highest value first\n  -d SORTLOW, --sortlow SORTLOW\n                        sort lowest value first\n\nwritten by jeremy schroeder 2-27-2024\n</code></pre>"},{"location":"vasp/vasp_thermo/","title":"vasp_thermo","text":"<p>I made scripts similar to the turbomole/freeh scripts but for VASP frequency calculations.</p>"},{"location":"vasp/vasp_thermo/#scripts-that-are-needed-to-produce-a-thermo-csv-file-from-vasp","title":"Scripts that are needed to produce a thermo .csv file from vasp.","text":"<ol> <li>/home/jerschro/Scripts/vasp/vasp_thermo/auto_thermo.sh</li> <li>/home/jerschro/Scripts/vasp/vasp_thermo/vasp_thermo_results.sh</li> <li>/home/jerschro/Scripts/vasp/vasp_thermo/thermo_to_csv.py</li> </ol> <p>Read top information in each file and change the variables in the top for what you need.</p> <p>Contact Jeremy for more information. These scripts need some work and are not that intuitive at the moment.</p>"}]}